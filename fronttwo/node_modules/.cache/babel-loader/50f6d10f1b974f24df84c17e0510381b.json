{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gudmu\\\\outofbox\\\\minitwo\\\\minitwofront\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_QUERY = `\n{\n  feed {\n    id\n  \timgname\n    location\n  \tsize\n    format\n    md5sum  \n  }\n}\n`;\n\nfunction App() {\n  const imgs = GetImgInfo();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"all-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      div: true,\n      class: \"ligth-title\",\n      children: \"Image scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), imgs.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"around-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"in-box\",\n        children: [img.imgname, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"in-box\",\n        children: img.size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"in-box\",\n        children: [img.format, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"in-box\",\n        children: [img.location, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"in-box\",\n        children: [img.md5sum, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), img.format, /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"in-box\",\n        children: [img.location, \" | \", img.md5sum, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, img.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App; //fetch the data from server\n\nfunction GetImgInfo() {\n  _s();\n\n  const [imgs, setImgs] = React.useState([]);\n  React.useEffect(() => {\n    fetch('http://localhost:4000/', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: IMG_QUERY\n      })\n    }).then(response => response.json()).then(data => setImgs(data.data.feed));\n  }, []);\n  return imgs;\n}\n\n_s(GetImgInfo, \"wB8umrBbglBk8vM9uavheI4rfEU=\");\n\n_c2 = GetImgInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"GetImgInfo\");","map":{"version":3,"sources":["C:/Users/gudmu/outofbox/minitwo/minitwofront/src/App.js"],"names":["React","IMG_QUERY","App","imgs","GetImgInfo","map","img","imgname","size","format","location","md5sum","id","setImgs","useState","useEffect","fetch","method","headers","body","JSON","stringify","query","then","response","json","data","feed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,SAAS,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,SAASC,GAAT,GAAe;AACb,QAAMC,IAAI,GAAGC,UAAU,EAAvB;AAEA,sBACE;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA,4BACE;AAAK,MAAA,GAAG,MAAR;AAAS,MAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGD,IAAI,CAACE,GAAL,CAASC,GAAG,iBACX;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,mBAAqBA,GAAG,CAACC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,kBAAqBD,GAAG,CAACE;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,mBAAqBF,GAAG,CAACG,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,mBAAqBH,GAAG,CAACI,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,mBAAqBJ,GAAG,CAACK,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAK0CL,GAAG,CAACG,MAL9C,eAME;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,mBAAqBH,GAAG,CAACI,QAAzB,SAAsCJ,GAAG,CAACK,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,OAA6BL,GAAG,CAACM,EAAjC;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KArBQV,G;AAuBT,eAAeA,GAAf,C,CAIA;;AACA,SAASE,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACD,IAAD,EAAOU,OAAP,IAAkBb,KAAK,CAACc,QAAN,CAAe,EAAf,CAAxB;AAEAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,wBAAD,EAA2B;AAC9BC,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFqB;AAG9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAErB;AAAT,OAAf;AAHwB,KAA3B,CAAL,CAIGsB,IAJH,CAIQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJpB,EAKCF,IALD,CAKMG,IAAI,IAAIb,OAAO,CAACa,IAAI,CAACA,IAAL,CAAUC,IAAX,CALrB;AAMD,GAPD,EAOG,EAPH;AASA,SAAOxB,IAAP;AACD;;GAbQC,U;;MAAAA,U","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst IMG_QUERY = `\n{\n  feed {\n    id\n  \timgname\n    location\n  \tsize\n    format\n    md5sum  \n  }\n}\n`\n\nfunction App() {\n  const imgs = GetImgInfo()\n\n  return (\n    <div class=\"all-box\">\n      <div div class=\"ligth-title\">Image scanner</div>\n      \n      {/* {JSON.stringify(imgs, null, 2)} */}\n      {imgs.map(img => (\n        <div class=\"around-box\" key={img.id}>\n          <div class=\"in-box\">{img.imgname} </div>\n          <div class=\"in-box\">{img.size}</div>\n          <div class=\"in-box\">{img.format} </div>\n          <div class=\"in-box\">{img.location} </div>\n          <div class=\"in-box\">{img.md5sum} </div>{img.format}\n          <div class=\"in-box\">{img.location} | {img.md5sum} </div>\n          </div>\n      ))}\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n\n//fetch the data from server\nfunction GetImgInfo() {\n  const [imgs, setImgs] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch('http://localhost:4000/', {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\"},\n      body: JSON.stringify({ query: IMG_QUERY })\n    }).then(response => response.json())\n    .then(data => setImgs(data.data.feed))\n  }, []);\n\n  return imgs\n}\n"]},"metadata":{},"sourceType":"module"}