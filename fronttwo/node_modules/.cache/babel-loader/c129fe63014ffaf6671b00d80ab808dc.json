{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gudmu\\\\outofbox\\\\minitwo\\\\minitwofront\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IMG_QUERY = `\n{\n  feed {\n    id\n  \timgname\n    location\n  \tsize\n    format\n    md5sum\n    \n  }\n}\n`;\n\nfunction App() {\n  const imgs = GetImgInfo();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"all-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      div: true,\n      class: \"ligth-title\",\n      children: \"Img scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), imgs.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"around-box\",\n      children: [img.imgname, \" | \", img.location, \" | \", img.size]\n    }, img.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App; //fetch the data from server\n\nfunction GetImgInfo() {\n  _s();\n\n  const [imgs, setImgs] = React.useState([]);\n  React.useEffect(() => {\n    fetch('http://localhost:4000/', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: IMG_QUERY\n      })\n    }).then(response => response.json()).then(data => setImgs(data.data.feed));\n  }, []);\n  return imgs;\n}\n\n_s(GetImgInfo, \"wB8umrBbglBk8vM9uavheI4rfEU=\");\n\n_c2 = GetImgInfo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"GetImgInfo\");","map":{"version":3,"sources":["C:/Users/gudmu/outofbox/minitwo/minitwofront/src/App.js"],"names":["React","IMG_QUERY","App","imgs","GetImgInfo","map","img","imgname","location","size","id","setImgs","useState","useEffect","fetch","method","headers","body","JSON","stringify","query","then","response","json","data","feed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,SAAS,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAcA,SAASC,GAAT,GAAe;AACb,QAAMC,IAAI,GAAGC,UAAU,EAAvB;AAEA,sBACE;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA,4BACE;AAAK,MAAA,GAAG,MAAR;AAAS,MAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGD,IAAI,CAACE,GAAL,CAASC,GAAG,iBACX;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA,iBAAsCA,GAAG,CAACC,OAA1C,SAAsDD,GAAG,CAACE,QAA1D,SAAuEF,GAAG,CAACG,IAA3E;AAAA,OAA6BH,GAAG,CAACI,EAAjC;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAdQR,G;AAgBT,eAAeA,GAAf,C,CAIA;;AACA,SAASE,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACD,IAAD,EAAOQ,OAAP,IAAkBX,KAAK,CAACY,QAAN,CAAe,EAAf,CAAxB;AAEAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,wBAAD,EAA2B;AAC9BC,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFqB;AAG9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAEnB;AAAT,OAAf;AAHwB,KAA3B,CAAL,CAIGoB,IAJH,CAIQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJpB,EAKCF,IALD,CAKMG,IAAI,IAAIb,OAAO,CAACa,IAAI,CAACA,IAAL,CAAUC,IAAX,CALrB;AAMD,GAPD,EAOG,EAPH;AASA,SAAOtB,IAAP;AACD;;GAbQC,U;;MAAAA,U","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst IMG_QUERY = `\n{\n  feed {\n    id\n  \timgname\n    location\n  \tsize\n    format\n    md5sum\n    \n  }\n}\n`\n\nfunction App() {\n  const imgs = GetImgInfo()\n\n  return (\n    <div class=\"all-box\">\n      <div div class=\"ligth-title\">Img scanner</div>\n      \n      {/* {JSON.stringify(imgs, null, 2)} */}\n      {imgs.map(img => (\n        <div class=\"around-box\" key={img.id}>{img.imgname} | {img.location} | {img.size}</div>\n      ))}\n      \n    </div>\n  );\n}\n\nexport default App;\n\n\n\n//fetch the data from server\nfunction GetImgInfo() {\n  const [imgs, setImgs] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch('http://localhost:4000/', {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\"},\n      body: JSON.stringify({ query: IMG_QUERY })\n    }).then(response => response.json())\n    .then(data => setImgs(data.data.feed))\n  }, []);\n\n  return imgs\n}\n"]},"metadata":{},"sourceType":"module"}